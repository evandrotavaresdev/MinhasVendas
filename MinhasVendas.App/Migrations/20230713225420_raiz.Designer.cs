// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinhasVendas.App.Data;

#nullable disable

namespace MinhasVendas.App.Migrations
{
    [DbContext(typeof(MinhasVendasAppContext))]
    [Migration("20230713225420_raiz")]
    partial class raiz
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("MinhasVendas.App.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.DetalheDeCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CustoUnitario")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataDeRecebimento")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrdemDeCompraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RegistradoTransacaoDeEstoque")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransacaoDeEstoqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeCompraId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("DetalheDeCompras");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.DetalheDeVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrdemDeVendaId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RegistroTransacaoDeEstoque")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransacaoDeEstoqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeVendaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("DetalheDeVendas");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.OrdemDeCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("FormaDePagamento")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusOrdemDeCompra")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorDeFrete")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("OrdemDeCompras");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.OrdemDeVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataDePagamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDeVenda")
                        .HasColumnType("TEXT");

                    b.Property<int>("FormaDePagamento")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusOrdemDeVenda")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("OrdemDeVendas");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstoqueAtual")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoBase")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoDeLista")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.TransacaoDeEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDeTransacao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrdemDeCompraId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrdemDeVendaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoDransacaoDeEstoque")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeCompraId");

                    b.HasIndex("OrdemDeVendaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("TransacaoDeEstoques");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.DetalheDeCompra", b =>
                {
                    b.HasOne("MinhasVendas.App.Models.OrdemDeCompra", "OrdemDeCompra")
                        .WithMany("DetalheDeCompras")
                        .HasForeignKey("OrdemDeCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhasVendas.App.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeCompra");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.DetalheDeVenda", b =>
                {
                    b.HasOne("MinhasVendas.App.Models.OrdemDeVenda", "OrdemDeVenda")
                        .WithMany("DetalheDeVendas")
                        .HasForeignKey("OrdemDeVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhasVendas.App.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeVenda");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.OrdemDeCompra", b =>
                {
                    b.HasOne("MinhasVendas.App.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.OrdemDeVenda", b =>
                {
                    b.HasOne("MinhasVendas.App.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.TransacaoDeEstoque", b =>
                {
                    b.HasOne("MinhasVendas.App.Models.OrdemDeCompra", "OrdemDeCompra")
                        .WithMany()
                        .HasForeignKey("OrdemDeCompraId");

                    b.HasOne("MinhasVendas.App.Models.OrdemDeVenda", "OrdemDeVenda")
                        .WithMany("TransacaoDeEstoques")
                        .HasForeignKey("OrdemDeVendaId");

                    b.HasOne("MinhasVendas.App.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeCompra");

                    b.Navigation("OrdemDeVenda");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.OrdemDeCompra", b =>
                {
                    b.Navigation("DetalheDeCompras");
                });

            modelBuilder.Entity("MinhasVendas.App.Models.OrdemDeVenda", b =>
                {
                    b.Navigation("DetalheDeVendas");

                    b.Navigation("TransacaoDeEstoques");
                });
#pragma warning restore 612, 618
        }
    }
}
